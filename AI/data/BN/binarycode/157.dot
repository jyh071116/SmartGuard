digraph G {
// Function: 157.sol-SingleSourceAuthority-SingleSourceAuthority()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
rootAuthority = msg.sender

IRs:
rootAuthority(address) := msg.sender(address)"];
}
// Function: 157.sol-SingleSourceAuthority-approveAuthority(address)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->3;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
authority = Authority({valid:true,authorizedBy:msg.sender,revokedBy:0x0,validFrom:block.number,validTo:0})

IRs:
TMP_7(SingleSourceAuthority.Authority) = new Authority(True,msg.sender,0,block.number,0)
authority(SingleSourceAuthority.Authority) := TMP_7(SingleSourceAuthority.Authority)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
authorities[authorityAddress] = authority

IRs:
REF_5(SingleSourceAuthority.Authority) -> authorities[authorityAddress]
REF_5(SingleSourceAuthority.Authority) (->authorities) := authority(SingleSourceAuthority.Authority)"];
3[label="Node Type: EXPRESSION 3

EXPRESSION:
restricted()

IRs:
MODIFIER_CALL, SingleSourceAuthority.restricted()()"];
3->1;
}
// Function: 157.sol-SingleSourceAuthority-changeRootAuthority(address)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->2;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
rootAuthority = newRootAuthorityAddress

IRs:
rootAuthority(address) := newRootAuthorityAddress(address)"];
2[label="Node Type: EXPRESSION 2

EXPRESSION:
restricted()

IRs:
MODIFIER_CALL, SingleSourceAuthority.restricted()()"];
2->1;
}
// Function: 157.sol-SingleSourceAuthority-isRootAuthority(address)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: IF 1

EXPRESSION:
authorityAddress == rootAuthority

IRs:
TMP_1(bool) = authorityAddress == rootAuthority
CONDITION TMP_1"];
1->2[label="True"];
1->3[label="False"];
2[label="Node Type: RETURN 2

EXPRESSION:
true

IRs:
RETURN True"];
3[label="Node Type: RETURN 3

EXPRESSION:
false

IRs:
RETURN False"];
}
// Function: 157.sol-SingleSourceAuthority-isValidAuthority(address,uint256)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
authority = authorities[authorityAddress]

IRs:
REF_0(SingleSourceAuthority.Authority) -> authorities[authorityAddress]
authority(SingleSourceAuthority.Authority) := REF_0(SingleSourceAuthority.Authority)"];
1->2;
2[label="Node Type: IF 2

EXPRESSION:
authority.valid

IRs:
REF_1(bool) -> authority.valid
CONDITION REF_1"];
2->3[label="True"];
2->7[label="False"];
3[label="Node Type: IF 3

EXPRESSION:
authority.validFrom <= blockNumber && (authority.validTo == 0 || authority.validTo >= blockNumber)

IRs:
REF_2(uint256) -> authority.validFrom
TMP_2(bool) = REF_2 <= blockNumber
REF_3(uint256) -> authority.validTo
TMP_3(bool) = REF_3 == 0
REF_4(uint256) -> authority.validTo
TMP_4(bool) = REF_4 >= blockNumber
TMP_5(bool) = TMP_3 || TMP_4
TMP_6(bool) = TMP_2 && TMP_5
CONDITION TMP_6"];
3->4[label="True"];
3->5[label="False"];
4[label="Node Type: RETURN 4

EXPRESSION:
true

IRs:
RETURN True"];
5[label="Node Type: RETURN 5

EXPRESSION:
false

IRs:
RETURN False"];
7[label="Node Type: RETURN 7

EXPRESSION:
false

IRs:
RETURN False"];
}
// Function: 157.sol-SingleSourceAuthority-restricted()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: IF 1

EXPRESSION:
msg.sender == rootAuthority

IRs:
TMP_10(bool) = msg.sender == rootAuthority
CONDITION TMP_10"];
1->2[label="True"];
1->3[label="False"];
2[label="Node Type: _ 2
"];
2->3;
3[label="Node Type: END_IF 3
"];
}
// Function: 157.sol-SingleSourceAuthority-revokeAuthority(address,uint256)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->4;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
authority = authorities[authorityAddress]

IRs:
REF_6(SingleSourceAuthority.Authority) -> authorities[authorityAddress]
authority(SingleSourceAuthority.Authority) := REF_6(SingleSourceAuthority.Authority)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
authority.revokedBy = msg.sender

IRs:
REF_7(address) -> authority.revokedBy
REF_7(address) (->authority) := msg.sender(address)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
authority.validTo = blockNumber

IRs:
REF_8(uint256) -> authority.validTo
REF_8(uint256) (->authority) := blockNumber(uint256)"];
4[label="Node Type: EXPRESSION 4

EXPRESSION:
restricted()

IRs:
MODIFIER_CALL, SingleSourceAuthority.restricted()()"];
4->1;
}
}
