digraph G {
// Function: 29842.sol-DelegateProxy-delegatedFwd(address,bytes)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(isContract(_dst))

IRs:
TMP_0(bool) = INTERNAL_CALL, DelegateProxy.isContract(address)(_dst)
TMP_1(None) = SOLIDITY_CALL require(bool)(TMP_0)"];
1->2;
2[label="Node Type: INLINE ASM 2
"];
2->3;
3[label="Node Type: END INLINE ASM 3
"];
}
// Function: 29842.sol-DelegateProxy-isContract(address)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1
"];
1->2;
2[label="Node Type: INLINE ASM 2
"];
2->3;
3[label="Node Type: END INLINE ASM 3
"];
3->4;
4[label="Node Type: RETURN 4

EXPRESSION:
size > 0

IRs:
TMP_2(bool) = size > 0
RETURN TMP_2"];
}
// Function: 29842.sol-IApplication-initialize(bytes)
digraph{
}
// Function: 29842.sol-LANDProxy-OwnableStorage()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)"];
}
// Function: 29842.sol-LANDProxy-delegatedFwd(address,bytes)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(isContract(_dst))

IRs:
TMP_16(bool) = INTERNAL_CALL, DelegateProxy.isContract(address)(_dst)
TMP_17(None) = SOLIDITY_CALL require(bool)(TMP_16)"];
1->2;
2[label="Node Type: INLINE ASM 2
"];
2->3;
3[label="Node Type: END INLINE ASM 3
"];
}
// Function: 29842.sol-LANDProxy-fallback()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(currentContract != 0)

IRs:
TMP_13(bool) = currentContract != 0
TMP_14(None) = SOLIDITY_CALL require(bool)(TMP_13)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
delegatedFwd(currentContract,msg.data)

IRs:
INTERNAL_CALL, DelegateProxy.delegatedFwd(address,bytes)(currentContract,msg.data)"];
}
// Function: 29842.sol-LANDProxy-isContract(address)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1
"];
1->2;
2[label="Node Type: INLINE ASM 2
"];
2->3;
3[label="Node Type: END INLINE ASM 3
"];
3->4;
4[label="Node Type: RETURN 4

EXPRESSION:
size > 0

IRs:
TMP_18(bool) = size > 0
RETURN TMP_18"];
}
// Function: 29842.sol-LANDProxy-slitherConstructorConstantVariables()
digraph{
0[label="Node Type: OTHER_ENTRYPOINT 0

EXPRESSION:
clearLow = 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000

IRs:
clearLow(uint256) := 115792089237316195423570985008687907852929702298719625575994209400481361428480(uint256)"];
0->1;
1[label="Node Type: OTHER_ENTRYPOINT 1

EXPRESSION:
clearHigh = 0x00000000000000000000000000000000ffffffffffffffffffffffffffffffff

IRs:
clearHigh(uint256) := 340282366920938463463374607431768211455(uint256)"];
1->2;
2[label="Node Type: OTHER_ENTRYPOINT 2

EXPRESSION:
factor = 0x100000000000000000000000000000000

IRs:
factor(uint256) := 340282366920938463463374607431768211456(uint256)"];
}
// Function: 29842.sol-LANDProxy-upgrade(IApplication,bytes)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
currentContract = newContract

IRs:
currentContract(address) := newContract(IApplication)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
newContract.initialize(data)

IRs:
HIGH_LEVEL_CALL, dest:newContract(IApplication), function:initialize, arguments:['data']  "];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
Upgrade(newContract,data)

IRs:
Emit Upgrade(newContract,data)"];
}
// Function: 29842.sol-LANDStorage-slitherConstructorConstantVariables()
digraph{
0[label="Node Type: OTHER_ENTRYPOINT 0

EXPRESSION:
clearLow = 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000

IRs:
clearLow(uint256) := 115792089237316195423570985008687907852929702298719625575994209400481361428480(uint256)"];
0->1;
1[label="Node Type: OTHER_ENTRYPOINT 1

EXPRESSION:
clearHigh = 0x00000000000000000000000000000000ffffffffffffffffffffffffffffffff

IRs:
clearHigh(uint256) := 340282366920938463463374607431768211455(uint256)"];
1->2;
2[label="Node Type: OTHER_ENTRYPOINT 2

EXPRESSION:
factor = 0x100000000000000000000000000000000

IRs:
factor(uint256) := 340282366920938463463374607431768211456(uint256)"];
}
// Function: 29842.sol-OwnableStorage-OwnableStorage()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)"];
}
// Function: 29842.sol-Proxy-delegatedFwd(address,bytes)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(isContract(_dst))

IRs:
TMP_3(bool) = INTERNAL_CALL, DelegateProxy.isContract(address)(_dst)
TMP_4(None) = SOLIDITY_CALL require(bool)(TMP_3)"];
1->2;
2[label="Node Type: INLINE ASM 2
"];
2->3;
3[label="Node Type: END INLINE ASM 3
"];
}
// Function: 29842.sol-Proxy-fallback()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(currentContract != 0)

IRs:
TMP_8(bool) = currentContract != 0
TMP_9(None) = SOLIDITY_CALL require(bool)(TMP_8)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
delegatedFwd(currentContract,msg.data)

IRs:
INTERNAL_CALL, DelegateProxy.delegatedFwd(address,bytes)(currentContract,msg.data)"];
}
// Function: 29842.sol-Proxy-isContract(address)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1
"];
1->2;
2[label="Node Type: INLINE ASM 2
"];
2->3;
3[label="Node Type: END INLINE ASM 3
"];
3->4;
4[label="Node Type: RETURN 4

EXPRESSION:
size > 0

IRs:
TMP_5(bool) = size > 0
RETURN TMP_5"];
}
// Function: 29842.sol-Proxy-upgrade(IApplication,bytes)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
currentContract = newContract

IRs:
currentContract(address) := newContract(IApplication)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
newContract.initialize(data)

IRs:
HIGH_LEVEL_CALL, dest:newContract(IApplication), function:initialize, arguments:['data']  "];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
Upgrade(newContract,data)

IRs:
Emit Upgrade(newContract,data)"];
}
// Function: 29842.sol-Storage-OwnableStorage()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)"];
}
// Function: 29842.sol-Storage-slitherConstructorConstantVariables()
digraph{
0[label="Node Type: OTHER_ENTRYPOINT 0

EXPRESSION:
clearLow = 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000

IRs:
clearLow(uint256) := 115792089237316195423570985008687907852929702298719625575994209400481361428480(uint256)"];
0->1;
1[label="Node Type: OTHER_ENTRYPOINT 1

EXPRESSION:
clearHigh = 0x00000000000000000000000000000000ffffffffffffffffffffffffffffffff

IRs:
clearHigh(uint256) := 340282366920938463463374607431768211455(uint256)"];
1->2;
2[label="Node Type: OTHER_ENTRYPOINT 2

EXPRESSION:
factor = 0x100000000000000000000000000000000

IRs:
factor(uint256) := 340282366920938463463374607431768211456(uint256)"];
}
}
