digraph G {
// Function: 44939.sol-OwnedUpgradeabilityProxy-_setPendingUpgradeabilityOwner(address)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
position = pendingProxyOwnerPosition

IRs:
position(bytes32) := pendingProxyOwnerPosition(bytes32)"];
1->2;
2[label="Node Type: INLINE ASM 2
"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
sstore(uint256,uint256)(position,newPendingProxyOwner)

IRs:
TMP_4(None) = SOLIDITY_CALL sstore(uint256,uint256)(position,newPendingProxyOwner)"];
3->4;
4[label="Node Type: END INLINE ASM 4
"];
}
// Function: 44939.sol-OwnedUpgradeabilityProxy-_setUpgradeabilityOwner(address)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
position = proxyOwnerPosition

IRs:
position(bytes32) := proxyOwnerPosition(bytes32)"];
1->2;
2[label="Node Type: INLINE ASM 2
"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
sstore(uint256,uint256)(position,newProxyOwner)

IRs:
TMP_3(None) = SOLIDITY_CALL sstore(uint256,uint256)(position,newProxyOwner)"];
3->4;
4[label="Node Type: END INLINE ASM 4
"];
}
// Function: 44939.sol-OwnedUpgradeabilityProxy-claimProxyOwnership()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->4;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
ProxyOwnershipTransferred(proxyOwner(),pendingProxyOwner())

IRs:
TMP_12(address) = INTERNAL_CALL, OwnedUpgradeabilityProxy.proxyOwner()()
TMP_13(address) = INTERNAL_CALL, OwnedUpgradeabilityProxy.pendingProxyOwner()()
Emit ProxyOwnershipTransferred(TMP_12,TMP_13)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
_setUpgradeabilityOwner(pendingProxyOwner())

IRs:
TMP_15(address) = INTERNAL_CALL, OwnedUpgradeabilityProxy.pendingProxyOwner()()
INTERNAL_CALL, OwnedUpgradeabilityProxy._setUpgradeabilityOwner(address)(TMP_15)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
_setPendingUpgradeabilityOwner(address(0))

IRs:
TMP_17 = CONVERT 0 to address
INTERNAL_CALL, OwnedUpgradeabilityProxy._setPendingUpgradeabilityOwner(address)(TMP_17)"];
4[label="Node Type: EXPRESSION 4

EXPRESSION:
onlyPendingProxyOwner()

IRs:
MODIFIER_CALL, OwnedUpgradeabilityProxy.onlyPendingProxyOwner()()"];
4->1;
}
// Function: 44939.sol-OwnedUpgradeabilityProxy-constructor()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
_setUpgradeabilityOwner(msg.sender)

IRs:
INTERNAL_CALL, OwnedUpgradeabilityProxy._setUpgradeabilityOwner(address)(msg.sender)"];
}
// Function: 44939.sol-OwnedUpgradeabilityProxy-fallback()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
proxyCall()

IRs:
INTERNAL_CALL, OwnedUpgradeabilityProxy.proxyCall()()"];
}
// Function: 44939.sol-OwnedUpgradeabilityProxy-implementation()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
position = implementationPosition

IRs:
position(bytes32) := implementationPosition(bytes32)"];
1->2;
2[label="Node Type: INLINE ASM 2
"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
impl = sload(uint256)(position)

IRs:
TMP_26(uint256) = SOLIDITY_CALL sload(uint256)(position)
impl(address) := TMP_26(uint256)"];
3->4;
4[label="Node Type: END INLINE ASM 4
"];
4->5;
5[label="Node Type: RETURN 5

EXPRESSION:
impl

IRs:
RETURN impl"];
}
// Function: 44939.sol-OwnedUpgradeabilityProxy-onlyPendingProxyOwner()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool,string)(msg.sender == pendingProxyOwner(),only pending Proxy Owner)

IRs:
TMP_49(address) = INTERNAL_CALL, OwnedUpgradeabilityProxy.pendingProxyOwner()()
TMP_50(bool) = msg.sender == TMP_49
TMP_51(None) = SOLIDITY_CALL require(bool,string)(TMP_50,only pending Proxy Owner)"];
1->2;
2[label="Node Type: _ 2
"];
}
// Function: 44939.sol-OwnedUpgradeabilityProxy-onlyProxyOwner()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool,string)(msg.sender == proxyOwner(),only Proxy Owner)

IRs:
TMP_46(address) = INTERNAL_CALL, OwnedUpgradeabilityProxy.proxyOwner()()
TMP_47(bool) = msg.sender == TMP_46
TMP_48(None) = SOLIDITY_CALL require(bool,string)(TMP_47,only Proxy Owner)"];
1->2;
2[label="Node Type: _ 2
"];
}
// Function: 44939.sol-OwnedUpgradeabilityProxy-pendingProxyOwner()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
position = pendingProxyOwnerPosition

IRs:
position(bytes32) := pendingProxyOwnerPosition(bytes32)"];
1->2;
2[label="Node Type: INLINE ASM 2
"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
pendingOwner = sload(uint256)(position)

IRs:
TMP_2(uint256) = SOLIDITY_CALL sload(uint256)(position)
pendingOwner(address) := TMP_2(uint256)"];
3->4;
4[label="Node Type: END INLINE ASM 4
"];
4->5;
5[label="Node Type: RETURN 5

EXPRESSION:
pendingOwner

IRs:
RETURN pendingOwner"];
}
// Function: 44939.sol-OwnedUpgradeabilityProxy-proxyCall()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
position = implementationPosition

IRs:
position(bytes32) := implementationPosition(bytes32)"];
1->2;
2[label="Node Type: INLINE ASM 2
"];
2->3;
3[label="Node Type: NEW VARIABLE 3
"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
ptr_proxyCall_asm_0 = mload(uint256)(0x40)

IRs:
TMP_29(uint256) = SOLIDITY_CALL mload(uint256)(64)
ptr_proxyCall_asm_0(uint256) := TMP_29(uint256)"];
4->5;
5[label="Node Type: EXPRESSION 5

EXPRESSION:
calldatacopy(uint256,uint256,uint256)(ptr_proxyCall_asm_0,returndatasize()(),calldatasize()())

IRs:
TMP_30(uint256) = SOLIDITY_CALL returndatasize()()
TMP_31(uint256) = SOLIDITY_CALL calldatasize()()
TMP_32(None) = SOLIDITY_CALL calldatacopy(uint256,uint256,uint256)(ptr_proxyCall_asm_0,TMP_30,TMP_31)"];
5->6;
6[label="Node Type: NEW VARIABLE 6
"];
6->7;
7[label="Node Type: EXPRESSION 7

EXPRESSION:
result_proxyCall_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),sload(uint256)(position),ptr_proxyCall_asm_0,calldatasize()(),returndatasize()(),returndatasize()())

IRs:
TMP_33(uint256) = SOLIDITY_CALL gas()()
TMP_34(uint256) = SOLIDITY_CALL sload(uint256)(position)
TMP_35(uint256) = SOLIDITY_CALL calldatasize()()
TMP_36(uint256) = SOLIDITY_CALL returndatasize()()
TMP_37(uint256) = SOLIDITY_CALL returndatasize()()
TMP_38(uint256) = SOLIDITY_CALL delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(TMP_33,TMP_34,ptr_proxyCall_asm_0,TMP_35,TMP_36,TMP_37)
result_proxyCall_asm_0(uint256) := TMP_38(uint256)"];
7->8;
8[label="Node Type: EXPRESSION 8

EXPRESSION:
returndatacopy(uint256,uint256,uint256)(ptr_proxyCall_asm_0,0,returndatasize()())

IRs:
TMP_39(uint256) = SOLIDITY_CALL returndatasize()()
TMP_40(None) = SOLIDITY_CALL returndatacopy(uint256,uint256,uint256)(ptr_proxyCall_asm_0,0,TMP_39)"];
8->9;
9[label="Node Type: NEW VARIABLE 9
"];
9->10;
10[label="Node Type: EXPRESSION 10

EXPRESSION:
switch_expr_3530_200_0_proxyCall_asm_0 = result_proxyCall_asm_0

IRs:
switch_expr_3530_200_0_proxyCall_asm_0(uint256) := result_proxyCall_asm_0(uint256)"];
10->11;
11[label="Node Type: IF 11

EXPRESSION:
switch_expr_3530_200_0_proxyCall_asm_0 == 0

IRs:
TMP_41(bool) = switch_expr_3530_200_0_proxyCall_asm_0 == 0
CONDITION TMP_41"];
11->13[label="True"];
11->14[label="False"];
12[label="Node Type: END_IF 12
"];
12->15;
13[label="Node Type: EXPRESSION 13

EXPRESSION:
revert(uint256,uint256)(ptr_proxyCall_asm_0,returndatasize()())

IRs:
TMP_42(uint256) = SOLIDITY_CALL returndatasize()()
TMP_43(None) = SOLIDITY_CALL revert(uint256,uint256)(ptr_proxyCall_asm_0,TMP_42)"];
13->12;
14[label="Node Type: EXPRESSION 14

EXPRESSION:
return(uint256,uint256)(ptr_proxyCall_asm_0,returndatasize()())

IRs:
TMP_44(uint256) = SOLIDITY_CALL returndatasize()()
TMP_45(None) = SOLIDITY_CALL return(uint256,uint256)(ptr_proxyCall_asm_0,TMP_44)"];
14->12;
15[label="Node Type: END INLINE ASM 15
"];
}
// Function: 44939.sol-OwnedUpgradeabilityProxy-proxyOwner()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
position = proxyOwnerPosition

IRs:
position(bytes32) := proxyOwnerPosition(bytes32)"];
1->2;
2[label="Node Type: INLINE ASM 2
"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
owner = sload(uint256)(position)

IRs:
TMP_1(uint256) = SOLIDITY_CALL sload(uint256)(position)
owner(address) := TMP_1(uint256)"];
3->4;
4[label="Node Type: END INLINE ASM 4
"];
4->5;
5[label="Node Type: RETURN 5

EXPRESSION:
owner

IRs:
RETURN owner"];
}
// Function: 44939.sol-OwnedUpgradeabilityProxy-receive()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
proxyCall()

IRs:
INTERNAL_CALL, OwnedUpgradeabilityProxy.proxyCall()()"];
}
// Function: 44939.sol-OwnedUpgradeabilityProxy-slitherConstructorConstantVariables()
digraph{
0[label="Node Type: OTHER_ENTRYPOINT 0

EXPRESSION:
proxyOwnerPosition = 0x6279e8199720cf3557ecd8b58d667c8edc486bd1cf3ad59ea9ebdfcae0d0dfac

IRs:
proxyOwnerPosition(bytes32) := 44542049551065065703458204035114314497264992384481157898179537453147491458988(uint256)"];
0->1;
1[label="Node Type: OTHER_ENTRYPOINT 1

EXPRESSION:
pendingProxyOwnerPosition = 0x8ddbac328deee8d986ec3a7b933a196f96986cb4ee030d86cc56431c728b83f4

IRs:
pendingProxyOwnerPosition(bytes32) := 64164239620743323084813693629232233315205810199422995200504164267904868254708(uint256)"];
1->2;
2[label="Node Type: OTHER_ENTRYPOINT 2

EXPRESSION:
implementationPosition = 0x6e41e0fbe643dfdb6043698bf865aada82dc46b953f754a3468eaa272a362dc7

IRs:
implementationPosition(bytes32) := 49870811185747941252920348717022804453068107056096978706622117746848092794311(uint256)"];
}
// Function: 44939.sol-OwnedUpgradeabilityProxy-transferProxyOwnership(address)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->4;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(newOwner != address(0))

IRs:
TMP_5 = CONVERT 0 to address
TMP_6(bool) = newOwner != TMP_5
TMP_7(None) = SOLIDITY_CALL require(bool)(TMP_6)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
_setPendingUpgradeabilityOwner(newOwner)

IRs:
INTERNAL_CALL, OwnedUpgradeabilityProxy._setPendingUpgradeabilityOwner(address)(newOwner)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
NewPendingOwner(proxyOwner(),newOwner)

IRs:
TMP_9(address) = INTERNAL_CALL, OwnedUpgradeabilityProxy.proxyOwner()()
Emit NewPendingOwner(TMP_9,newOwner)"];
4[label="Node Type: EXPRESSION 4

EXPRESSION:
onlyProxyOwner()

IRs:
MODIFIER_CALL, OwnedUpgradeabilityProxy.onlyProxyOwner()()"];
4->1;
}
// Function: 44939.sol-OwnedUpgradeabilityProxy-upgradeTo(address)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->11;
1[label="Node Type: NEW VARIABLE 1
"];
1->2;
2[label="Node Type: NEW VARIABLE 2

EXPRESSION:
position = implementationPosition

IRs:
position(bytes32) := implementationPosition(bytes32)"];
2->3;
3[label="Node Type: INLINE ASM 3
"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
currentImplementation = sload(uint256)(position)

IRs:
TMP_20(uint256) = SOLIDITY_CALL sload(uint256)(position)
currentImplementation(address) := TMP_20(uint256)"];
4->5;
5[label="Node Type: END INLINE ASM 5
"];
5->6;
6[label="Node Type: EXPRESSION 6

EXPRESSION:
require(bool)(currentImplementation != implementation)

IRs:
TMP_21(bool) = currentImplementation != implementation
TMP_22(None) = SOLIDITY_CALL require(bool)(TMP_21)"];
6->7;
7[label="Node Type: INLINE ASM 7
"];
7->8;
8[label="Node Type: EXPRESSION 8

EXPRESSION:
sstore(uint256,uint256)(position,implementation)

IRs:
TMP_23(None) = SOLIDITY_CALL sstore(uint256,uint256)(position,implementation)"];
8->9;
9[label="Node Type: END INLINE ASM 9
"];
9->10;
10[label="Node Type: EXPRESSION 10

EXPRESSION:
Upgraded(implementation)

IRs:
Emit Upgraded(implementation)"];
11[label="Node Type: EXPRESSION 11

EXPRESSION:
onlyProxyOwner()

IRs:
MODIFIER_CALL, OwnedUpgradeabilityProxy.onlyProxyOwner()()"];
11->1;
}
}
