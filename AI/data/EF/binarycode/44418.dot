digraph G {
// Function: 44418.sol-AccountImplementations-getImplementation(bytes4)
digraph{
}
// Function: 44418.sol-InstaAccountV2-_delegate(address)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: INLINE ASM 1
"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
calldatacopy(uint256,uint256,uint256)(0,0,calldatasize()())

IRs:
TMP_1(uint256) = SOLIDITY_CALL calldatasize()()
TMP_2(None) = SOLIDITY_CALL calldatacopy(uint256,uint256,uint256)(0,0,TMP_1)"];
2->3;
3[label="Node Type: NEW VARIABLE 3
"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
result__delegate_asm_0 = delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(gas()(),implementation,0,calldatasize()(),0,0)

IRs:
TMP_3(uint256) = SOLIDITY_CALL gas()()
TMP_4(uint256) = SOLIDITY_CALL calldatasize()()
TMP_5(uint256) = SOLIDITY_CALL delegatecall(uint256,uint256,uint256,uint256,uint256,uint256)(TMP_3,implementation,0,TMP_4,0,0)
result__delegate_asm_0(uint256) := TMP_5(uint256)"];
4->5;
5[label="Node Type: EXPRESSION 5

EXPRESSION:
returndatacopy(uint256,uint256,uint256)(0,0,returndatasize()())

IRs:
TMP_6(uint256) = SOLIDITY_CALL returndatasize()()
TMP_7(None) = SOLIDITY_CALL returndatacopy(uint256,uint256,uint256)(0,0,TMP_6)"];
5->6;
6[label="Node Type: NEW VARIABLE 6
"];
6->7;
7[label="Node Type: EXPRESSION 7

EXPRESSION:
switch_expr_729_130_0__delegate_asm_0 = result__delegate_asm_0

IRs:
switch_expr_729_130_0__delegate_asm_0(uint256) := result__delegate_asm_0(uint256)"];
7->8;
8[label="Node Type: IF 8

EXPRESSION:
switch_expr_729_130_0__delegate_asm_0 == 0

IRs:
TMP_8(bool) = switch_expr_729_130_0__delegate_asm_0 == 0
CONDITION TMP_8"];
8->10[label="True"];
8->11[label="False"];
9[label="Node Type: END_IF 9
"];
9->12;
10[label="Node Type: EXPRESSION 10

EXPRESSION:
revert(uint256,uint256)(0,returndatasize()())

IRs:
TMP_9(uint256) = SOLIDITY_CALL returndatasize()()
TMP_10(None) = SOLIDITY_CALL revert(uint256,uint256)(0,TMP_9)"];
10->9;
11[label="Node Type: EXPRESSION 11

EXPRESSION:
return(uint256,uint256)(0,returndatasize()())

IRs:
TMP_11(uint256) = SOLIDITY_CALL returndatasize()()
TMP_12(None) = SOLIDITY_CALL return(uint256,uint256)(0,TMP_11)"];
11->9;
12[label="Node Type: END INLINE ASM 12
"];
}
// Function: 44418.sol-InstaAccountV2-_fallback(bytes4)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
_implementation = implementations.getImplementation(_sig)

IRs:
TMP_13(address) = HIGH_LEVEL_CALL, dest:implementations(AccountImplementations), function:getImplementation, arguments:['_sig']  
_implementation(address) := TMP_13(address)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
require(bool,string)(_implementation != address(0),InstaAccountV2: Not able to find _implementation)

IRs:
TMP_14 = CONVERT 0 to address
TMP_15(bool) = _implementation != TMP_14
TMP_16(None) = SOLIDITY_CALL require(bool,string)(TMP_15,InstaAccountV2: Not able to find _implementation)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
_delegate(_implementation)

IRs:
INTERNAL_CALL, InstaAccountV2._delegate(address)(_implementation)"];
}
// Function: 44418.sol-InstaAccountV2-constructor(address)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
implementations = AccountImplementations(_implementations)

IRs:
TMP_0 = CONVERT _implementations to AccountImplementations
implementations(AccountImplementations) := TMP_0(AccountImplementations)"];
}
// Function: 44418.sol-InstaAccountV2-fallback()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
_fallback(msg.sig)

IRs:
INTERNAL_CALL, InstaAccountV2._fallback(bytes4)(msg.sig)"];
}
// Function: 44418.sol-InstaAccountV2-receive()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: IF 1

EXPRESSION:
msg.sig != 0x00000000

IRs:
TMP_19(bool) = msg.sig != 0
CONDITION TMP_19"];
1->2[label="True"];
1->3[label="False"];
2[label="Node Type: EXPRESSION 2

EXPRESSION:
_fallback(msg.sig)

IRs:
INTERNAL_CALL, InstaAccountV2._fallback(bytes4)(msg.sig)"];
2->3;
3[label="Node Type: END_IF 3
"];
}
}
