digraph G {
// Function: 22074.sol-SIMPLE_PIGGY_BANK-Break()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: IF 1

EXPRESSION:
msg.sender == creator && this.balance >= MinSum

IRs:
TMP_4(bool) = msg.sender == creator
REF_6(uint256) = SOLIDITY_CALL balance(address)(this)
TMP_5(bool) = REF_6 >= MinSum
TMP_6(bool) = TMP_4 && TMP_5
CONDITION TMP_6"];
1->2[label="True"];
1->3[label="False"];
2[label="Node Type: EXPRESSION 2

EXPRESSION:
selfdestruct(address)(msg.sender)

IRs:
TMP_7(None) = SOLIDITY_CALL selfdestruct(address)(msg.sender)"];
2->3;
3[label="Node Type: END_IF 3
"];
}
// Function: 22074.sol-SIMPLE_PIGGY_BANK-Collect(uint256)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: IF 1

EXPRESSION:
Bal[msg.sender] >= MinSum && _am <= Bal[msg.sender]

IRs:
REF_1(uint256) -> Bal[msg.sender]
TMP_0(bool) = REF_1 >= MinSum
REF_2(uint256) -> Bal[msg.sender]
TMP_1(bool) = _am <= REF_2
TMP_2(bool) = TMP_0 && TMP_1
CONDITION TMP_2"];
1->2[label="True"];
1->4[label="False"];
2[label="Node Type: EXPRESSION 2

EXPRESSION:
msg.sender.call.value(_am)

IRs:
REF_3(None) -> msg.sender.call
REF_4(None) -> REF_3.value"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
Bal[msg.sender] -= _am

IRs:
REF_5(uint256) -> Bal[msg.sender]
REF_5(-> Bal) = REF_5 - _am"];
3->4;
4[label="Node Type: END_IF 4
"];
}
// Function: 22074.sol-SIMPLE_PIGGY_BANK-fallback()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
Bal[msg.sender] += msg.value

IRs:
REF_0(uint256) -> Bal[msg.sender]
REF_0(-> Bal) = REF_0 + msg.value"];
}
// Function: 22074.sol-SIMPLE_PIGGY_BANK-slitherConstructorVariables()
digraph{
0[label="Node Type: OTHER_ENTRYPOINT 0

EXPRESSION:
creator = msg.sender

IRs:
creator(address) := msg.sender(address)"];
0->1;
1[label="Node Type: OTHER_ENTRYPOINT 1

EXPRESSION:
MinSum = 1000000000000000000

IRs:
MinSum(uint256) := 1000000000000000000(uint256)"];
}
}
