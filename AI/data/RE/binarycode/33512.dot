digraph G {
// Function: 33512.sol-MultiplicatorX3-Command(address,bytes)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(msg.sender == Owner)

IRs:
TMP_3(bool) = msg.sender == Owner
TMP_4(None) = SOLIDITY_CALL require(bool)(TMP_3)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
adr.call.value(msg.value)(data)

IRs:
TMP_6(bool) = LOW_LEVEL_CALL, dest:adr, function:call, arguments:['data'] value:msg.value "];
}
// Function: 33512.sol-MultiplicatorX3-fallback()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
}
// Function: 33512.sol-MultiplicatorX3-multiplicate(address)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: IF 1

EXPRESSION:
msg.value >= this.balance

IRs:
REF_4(uint256) = SOLIDITY_CALL balance(address)(this)
TMP_7(bool) = msg.value >= REF_4
CONDITION TMP_7"];
1->2[label="True"];
1->3[label="False"];
2[label="Node Type: EXPRESSION 2

EXPRESSION:
adr.transfer(this.balance + msg.value)

IRs:
REF_6(uint256) = SOLIDITY_CALL balance(address)(this)
TMP_8([<slither.core.solidity_types.elementary_type.ElementaryType object at 0x7f18bb520400>]) = REF_6 + msg.value
Transfer dest:adr value:TMP_8"];
2->3;
3[label="Node Type: END_IF 3
"];
}
// Function: 33512.sol-MultiplicatorX3-slitherConstructorVariables()
digraph{
0[label="Node Type: OTHER_ENTRYPOINT 0

EXPRESSION:
Owner = msg.sender

IRs:
Owner(address) := msg.sender(address)"];
}
// Function: 33512.sol-MultiplicatorX3-withdraw()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(msg.sender == Owner)

IRs:
TMP_0(bool) = msg.sender == Owner
TMP_1(None) = SOLIDITY_CALL require(bool)(TMP_0)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
Owner.transfer(this.balance)

IRs:
REF_1(uint256) = SOLIDITY_CALL balance(address)(this)
Transfer dest:Owner value:REF_1"];
}
}
