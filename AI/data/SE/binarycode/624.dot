digraph G {
// Function: 624.sol-HourglassInterface-buy(address)
digraph{
}
// Function: 624.sol-HourglassInterface-withdraw()
digraph{
}
// Function: 624.sol-StrongHand-buy(address)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->2;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
purchase(msg.value,_referrer)

IRs:
INTERNAL_CALL, StrongHand.purchase(uint256,address)(msg.value,_referrer)"];
2[label="Node Type: EXPRESSION 2

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, StrongHand.onlyOwner()()"];
2->1;
}
// Function: 624.sol-StrongHand-constructor(address)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
owner = _owner

IRs:
owner(address) := _owner(address)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
strongHandManager = StrongHandsManagerInterface(msg.sender)

IRs:
TMP_9 = CONVERT msg.sender to StrongHandsManagerInterface
strongHandManager(StrongHandsManagerInterface) := TMP_9(StrongHandsManagerInterface)"];
}
// Function: 624.sol-StrongHand-fallback()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
}
// Function: 624.sol-StrongHand-onlyOwner()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(msg.sender == owner)

IRs:
TMP_21(bool) = msg.sender == owner
TMP_22(None) = SOLIDITY_CALL require(bool)(TMP_21)"];
1->2;
2[label="Node Type: _ 2
"];
}
// Function: 624.sol-StrongHand-purchase(uint256,address)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
amountPurchased = p3dContract.buy.value(_amount)(_referrer)

IRs:
TMP_13(uint256) = HIGH_LEVEL_CALL, dest:p3dContract(HourglassInterface), function:buy, arguments:['_referrer'] value:_amount 
amountPurchased(uint256) := TMP_13(uint256)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
strongHandManager.mint(owner,amountPurchased)

IRs:
HIGH_LEVEL_CALL, dest:strongHandManager(StrongHandsManagerInterface), function:mint, arguments:['owner', 'amountPurchased']  "];
}
// Function: 624.sol-StrongHand-slitherConstructorConstantVariables()
digraph{
0[label="Node Type: OTHER_ENTRYPOINT 0

EXPRESSION:
p3dContract = HourglassInterface(0xB3775fB83F7D12A36E0475aBdD1FCA35c091efBe)

IRs:
TMP_20 = CONVERT 1024571475019602228541062862604156821122634084286 to HourglassInterface
p3dContract(HourglassInterface) := TMP_20(HourglassInterface)"];
}
// Function: 624.sol-StrongHand-withdraw()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->3;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
p3dContract.withdraw()

IRs:
HIGH_LEVEL_CALL, dest:p3dContract(HourglassInterface), function:withdraw, arguments:[]  "];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
owner.transfer(address(this).balance)

IRs:
TMP_16 = CONVERT this to address
TMP_17(uint256) = SOLIDITY_CALL balance(address)(TMP_16)
Transfer dest:owner value:TMP_17"];
3[label="Node Type: EXPRESSION 3

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, StrongHand.onlyOwner()()"];
3->1;
}
// Function: 624.sol-StrongHandsManager-balanceOf(address)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: RETURN 1

EXPRESSION:
ownerToBalance[_owner]

IRs:
REF_5(uint256) -> ownerToBalance[_owner]
RETURN REF_5"];
}
// Function: 624.sol-StrongHandsManager-getStrong()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool,string)(strongHands[msg.sender] == address(0),you already became a Stronghand)

IRs:
REF_0(address) -> strongHands[msg.sender]
TMP_0 = CONVERT 0 to address
TMP_1(bool) = REF_0 == TMP_0
TMP_2(None) = SOLIDITY_CALL require(bool,string)(TMP_1,you already became a Stronghand)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
strongHands[msg.sender] = new StrongHand(msg.sender)

IRs:
REF_1(address) -> strongHands[msg.sender]
TMP_4(StrongHand) = new StrongHand(msg.sender) 
REF_1(address) (->strongHands) := TMP_4(StrongHand)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
CreateStrongHand(msg.sender,strongHands[msg.sender])

IRs:
REF_2(address) -> strongHands[msg.sender]
Emit CreateStrongHand(msg.sender,REF_2)"];
}
// Function: 624.sol-StrongHandsManager-mint(address,uint256)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(strongHands[_owner] == msg.sender)

IRs:
REF_3(address) -> strongHands[_owner]
TMP_6(bool) = REF_3 == msg.sender
TMP_7(None) = SOLIDITY_CALL require(bool)(TMP_6)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
tokenSupply += _amount

IRs:
tokenSupply(uint256) = tokenSupply + _amount"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
ownerToBalance[_owner] += _amount

IRs:
REF_4(uint256) -> ownerToBalance[_owner]
REF_4(-> ownerToBalance) = REF_4 + _amount"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
MintToken(_owner,_amount)

IRs:
Emit MintToken(_owner,_amount)"];
}
// Function: 624.sol-StrongHandsManager-slitherConstructorConstantVariables()
digraph{
0[label="Node Type: OTHER_ENTRYPOINT 0

EXPRESSION:
name = Stronghands3D

IRs:
name(string) := Stronghands3D(string)"];
0->1;
1[label="Node Type: OTHER_ENTRYPOINT 1

EXPRESSION:
symbol = S3D

IRs:
symbol(string) := S3D(string)"];
1->2;
2[label="Node Type: OTHER_ENTRYPOINT 2

EXPRESSION:
decimals = 18

IRs:
decimals(uint8) := 18(uint256)"];
}
// Function: 624.sol-StrongHandsManager-slitherConstructorVariables()
digraph{
0[label="Node Type: OTHER_ENTRYPOINT 0

EXPRESSION:
tokenSupply = 0

IRs:
tokenSupply(uint256) := 0(uint256)"];
}
// Function: 624.sol-StrongHandsManager-totalSupply()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: RETURN 1

EXPRESSION:
tokenSupply

IRs:
RETURN tokenSupply"];
}
// Function: 624.sol-StrongHandsManagerInterface-mint(address,uint256)
digraph{
}
}
