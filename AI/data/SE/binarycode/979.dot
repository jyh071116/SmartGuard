digraph G {
// Function: 979.sol-MultiEtherSender-constructor()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)"];
}
// Function: 979.sol-MultiEtherSender-fallback()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
owner.transfer(msg.value)

IRs:
Transfer dest:owner value:msg.value"];
}
// Function: 979.sol-MultiEtherSender-multiSendEth(uint256,address[])
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
balance = msg.sender.balance

IRs:
REF_0(uint256) = SOLIDITY_CALL balance(address)(msg.sender)
balance(uint256) := REF_0([<slither.core.solidity_types.elementary_type.ElementaryType object at 0x7fdd2f203130>])"];
1->2;
2[label="Node Type: NEW VARIABLE 2

EXPRESSION:
result = false

IRs:
result(bool) := False(bool)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
require(bool)(list.length != 0)

IRs:
REF_1 -> LENGTH list
TMP_0(bool) = REF_1 != 0
TMP_1(None) = SOLIDITY_CALL require(bool)(TMP_0)"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
require(bool)(list.length <= MAX_RECIPIENTS)

IRs:
REF_2 -> LENGTH list
TMP_2(bool) = REF_2 <= MAX_RECIPIENTS
TMP_3(None) = SOLIDITY_CALL require(bool)(TMP_2)"];
4->7;
5[label="Node Type: BEGIN_LOOP 5
"];
5->8;
6[label="Node Type: END_LOOP 6
"];
6->12;
7[label="Node Type: NEW VARIABLE 7

EXPRESSION:
i = 0

IRs:
i(uint256) := 0(uint256)"];
7->5;
8[label="Node Type: IF_LOOP 8

EXPRESSION:
i < list.length

IRs:
REF_3 -> LENGTH list
TMP_4(bool) = i < REF_3
CONDITION TMP_4"];
8->9[label="True"];
8->6[label="False"];
9[label="Node Type: EXPRESSION 9

EXPRESSION:
require(bool)(balance >= amount)

IRs:
TMP_5(bool) = balance >= amount
TMP_6(None) = SOLIDITY_CALL require(bool)(TMP_5)"];
9->10;
10[label="Node Type: EXPRESSION 10

EXPRESSION:
result = list[i].send(amount)

IRs:
REF_4(address) -> list[i]
TMP_7 = SEND dest:REF_4 value:amount
result(bool) := TMP_7(bool)"];
10->11;
11[label="Node Type: EXPRESSION 11

EXPRESSION:
i ++

IRs:
TMP_8(uint256) := i(uint256)
i(uint256) = i + 1"];
11->8;
12[label="Node Type: RETURN 12

EXPRESSION:
result

IRs:
RETURN result"];
}
// Function: 979.sol-MultiEtherSender-slitherConstructorVariables()
digraph{
0[label="Node Type: OTHER_ENTRYPOINT 0

EXPRESSION:
MAX_RECIPIENTS = 255

IRs:
MAX_RECIPIENTS(uint8) := 255(uint256)"];
}
}
