digraph G {
// Function: 10298.sol-ERC20-allowance(address,address)
digraph{
}
// Function: 10298.sol-ERC20-approve(address,uint256)
digraph{
}
// Function: 10298.sol-ERC20-balanceOf(address)
digraph{
}
// Function: 10298.sol-ERC20-transfer(address,uint256)
digraph{
}
// Function: 10298.sol-ERC20-transferFrom(address,address,uint256)
digraph{
}
// Function: 10298.sol-FsTKAllocation-fallback()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
amount = vestedAmount / 5

IRs:
TMP_7(uint256) = vestedAmount / 5
amount(uint256) := TMP_7(uint256)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
require(bool)(token.transfer(0x808b0730252DAA3a12CadC72f42E46E92a5e1bC8,amount) && true && true && true && true && true && token.transfer(0xdA01fAFaF5E49e9467f99f5969cab499a5759cC6,amount) && token.transfer(0xddab6c29090E6111A490527614Ceac583D02C8De,amount) && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && token.transfer(0xFFB5d7C71e8680D0e9482e107F019a2b25D225B5,amount) && true && true && token.transfer(0x91cE537b1a8118Aa20Ef7F3093697a7437a5Dc4B,amount) && true && true && true && true && true && true && block.timestamp >= RELEASE_EPOCH && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true && true)

IRs:
TMP_8(bool) = HIGH_LEVEL_CALL, dest:token(ERC20), function:transfer, arguments:['733851248417020892058646629192842192370869869512', 'amount']  
TMP_9(bool) = TMP_8 && True
TMP_10(bool) = TMP_9 && True
TMP_11(bool) = TMP_10 && True
TMP_12(bool) = TMP_11 && True
TMP_13(bool) = TMP_12 && True
TMP_14(bool) = HIGH_LEVEL_CALL, dest:token(ERC20), function:transfer, arguments:['1244604152253718136231958912578883216304971816134', 'amount']  
TMP_15(bool) = TMP_13 && TMP_14
TMP_16(bool) = HIGH_LEVEL_CALL, dest:token(ERC20), function:transfer, arguments:['1265509809871512658187466305935932120176229796062', 'amount']  
TMP_17(bool) = TMP_15 && TMP_16
TMP_18(bool) = TMP_17 && True
TMP_19(bool) = TMP_18 && True
TMP_20(bool) = TMP_19 && True
TMP_21(bool) = TMP_20 && True
TMP_22(bool) = TMP_21 && True
TMP_23(bool) = TMP_22 && True
TMP_24(bool) = TMP_23 && True
TMP_25(bool) = TMP_24 && True
TMP_26(bool) = TMP_25 && True
TMP_27(bool) = TMP_26 && True
TMP_28(bool) = TMP_27 && True
TMP_29(bool) = TMP_28 && True
TMP_30(bool) = TMP_29 && True
TMP_31(bool) = TMP_30 && True
TMP_32(bool) = TMP_31 && True
TMP_33(bool) = TMP_32 && True
TMP_34(bool) = TMP_33 && True
TMP_35(bool) = TMP_34 && True
TMP_36(bool) = TMP_35 && True
TMP_37(bool) = TMP_36 && True
TMP_38(bool) = TMP_37 && True
TMP_39(bool) = TMP_38 && True
TMP_40(bool) = TMP_39 && True
TMP_41(bool) = TMP_40 && True
TMP_42(bool) = TMP_41 && True
TMP_43(bool) = TMP_42 && True
TMP_44(bool) = TMP_43 && True
TMP_45(bool) = TMP_44 && True
TMP_46(bool) = TMP_45 && True
TMP_47(bool) = TMP_46 && True
TMP_48(bool) = TMP_47 && True
TMP_49(bool) = TMP_48 && True
TMP_50(bool) = TMP_49 && True
TMP_51(bool) = TMP_50 && True
TMP_52(bool) = TMP_51 && True
TMP_53(bool) = TMP_52 && True
TMP_54(bool) = TMP_53 && True
TMP_55(bool) = TMP_54 && True
TMP_56(bool) = TMP_55 && True
TMP_57(bool) = TMP_56 && True
TMP_58(bool) = TMP_57 && True
TMP_59(bool) = TMP_58 && True
TMP_60(bool) = TMP_59 && True
TMP_61(bool) = TMP_60 && True
TMP_62(bool) = TMP_61 && True
TMP_63(bool) = TMP_62 && True
TMP_64(bool) = TMP_63 && True
TMP_65(bool) = TMP_64 && True
TMP_66(bool) = TMP_65 && True
TMP_67(bool) = TMP_66 && True
TMP_68(bool) = TMP_67 && True
TMP_69(bool) = TMP_68 && True
TMP_70(bool) = TMP_69 && True
TMP_71(bool) = TMP_70 && True
TMP_72(bool) = TMP_71 && True
TMP_73(bool) = TMP_72 && True
TMP_74(bool) = TMP_73 && True
TMP_75(bool) = TMP_74 && True
TMP_76(bool) = TMP_75 && True
TMP_77(bool) = HIGH_LEVEL_CALL, dest:token(ERC20), function:transfer, arguments:['1459847878339254687540528388146451635933436585397', 'amount']  
TMP_78(bool) = TMP_76 && TMP_77
TMP_79(bool) = TMP_78 && True
TMP_80(bool) = TMP_79 && True
TMP_81(bool) = HIGH_LEVEL_CALL, dest:token(ERC20), function:transfer, arguments:['832404887490047741198834870769995283511579630667', 'amount']  
TMP_82(bool) = TMP_80 && TMP_81
TMP_83(bool) = TMP_82 && True
TMP_84(bool) = TMP_83 && True
TMP_85(bool) = TMP_84 && True
TMP_86(bool) = TMP_85 && True
TMP_87(bool) = TMP_86 && True
TMP_88(bool) = TMP_87 && True
TMP_89(bool) = block.timestamp >= RELEASE_EPOCH
TMP_90(bool) = TMP_88 && TMP_89
TMP_91(bool) = TMP_90 && True
TMP_92(bool) = TMP_91 && True
TMP_93(bool) = TMP_92 && True
TMP_94(bool) = TMP_93 && True
TMP_95(bool) = TMP_94 && True
TMP_96(bool) = TMP_95 && True
TMP_97(bool) = TMP_96 && True
TMP_98(bool) = TMP_97 && True
TMP_99(bool) = TMP_98 && True
TMP_100(bool) = TMP_99 && True
TMP_101(bool) = TMP_100 && True
TMP_102(bool) = TMP_101 && True
TMP_103(bool) = TMP_102 && True
TMP_104(bool) = TMP_103 && True
TMP_105(bool) = TMP_104 && True
TMP_106(bool) = TMP_105 && True
TMP_107(bool) = TMP_106 && True
TMP_108(bool) = TMP_107 && True
TMP_109(bool) = TMP_108 && True
TMP_110(bool) = TMP_109 && True
TMP_111(bool) = TMP_110 && True
TMP_112(bool) = TMP_111 && True
TMP_113(bool) = TMP_112 && True
TMP_114(bool) = TMP_113 && True
TMP_115(bool) = TMP_114 && True
TMP_116(bool) = TMP_115 && True
TMP_117(bool) = TMP_116 && True
TMP_118(bool) = TMP_117 && True
TMP_119(bool) = TMP_118 && True
TMP_120(bool) = TMP_119 && True
TMP_121(bool) = TMP_120 && True
TMP_122(bool) = TMP_121 && True
TMP_123(bool) = TMP_122 && True
TMP_124(bool) = TMP_123 && True
TMP_125(bool) = TMP_124 && True
TMP_126(bool) = TMP_125 && True
TMP_127(bool) = TMP_126 && True
TMP_128(bool) = TMP_127 && True
TMP_129(bool) = TMP_128 && True
TMP_130(bool) = TMP_129 && True
TMP_131(bool) = TMP_130 && True
TMP_132(bool) = TMP_131 && True
TMP_133(bool) = TMP_132 && True
TMP_134(bool) = TMP_133 && True
TMP_135(bool) = TMP_134 && True
TMP_136(bool) = TMP_135 && True
TMP_137(bool) = TMP_136 && True
TMP_138(bool) = TMP_137 && True
TMP_139(bool) = TMP_138 && True
TMP_140(bool) = TMP_139 && True
TMP_141(bool) = TMP_140 && True
TMP_142(bool) = TMP_141 && True
TMP_143(bool) = TMP_142 && True
TMP_144(bool) = TMP_143 && True
TMP_145(bool) = TMP_144 && True
TMP_146(bool) = TMP_145 && True
TMP_147(bool) = TMP_146 && True
TMP_148(bool) = TMP_147 && True
TMP_149(bool) = TMP_148 && True
TMP_150(bool) = TMP_149 && True
TMP_151(bool) = TMP_150 && True
TMP_152(bool) = TMP_151 && True
TMP_153(bool) = TMP_152 && True
TMP_154(bool) = TMP_153 && True
TMP_155(bool) = TMP_154 && True
TMP_156(bool) = TMP_155 && True
TMP_157(bool) = TMP_156 && True
TMP_158(bool) = TMP_157 && True
TMP_159(bool) = TMP_158 && True
TMP_160(bool) = TMP_159 && True
TMP_161(bool) = TMP_160 && True
TMP_162(bool) = TMP_161 && True
TMP_163(bool) = TMP_162 && True
TMP_164(None) = SOLIDITY_CALL require(bool)(TMP_163)"];
}
// Function: 10298.sol-FsTKAllocation-initialize(uint256)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(address(token) == 0 && _vestedAmount % 5 == 0)

IRs:
TMP_0 = CONVERT token to address
TMP_1(bool) = TMP_0 == 0
TMP_2(uint256) = _vestedAmount % 5
TMP_3(bool) = TMP_2 == 0
TMP_4(bool) = TMP_1 && TMP_3
TMP_5(None) = SOLIDITY_CALL require(bool)(TMP_4)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
vestedAmount = _vestedAmount

IRs:
vestedAmount(uint256) := _vestedAmount(uint256)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
token = ERC20(msg.sender)

IRs:
TMP_6 = CONVERT msg.sender to ERC20
token(ERC20) := TMP_6(ERC20)"];
}
// Function: 10298.sol-FsTKAllocation-slitherConstructorConstantVariables()
digraph{
0[label="Node Type: OTHER_ENTRYPOINT 0

EXPRESSION:
RELEASE_EPOCH = 1642032000

IRs:
RELEASE_EPOCH(uint256) := 1642032000(uint256)"];
}
}
