digraph G {
// Function: 6199.sol-BulletinBoard-addMessage(string)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(msg.value >= 1000000000000 * bytes(text).length)

IRs:
TMP_0 = CONVERT text to bytes
REF_0 -> LENGTH TMP_0
TMP_1(uint256) = 1000000000000 * REF_0
TMP_2(bool) = msg.value >= TMP_1
TMP_3(None) = SOLIDITY_CALL require(bool)(TMP_2)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
messages.push(Message(msg.sender,text,block.timestamp,msg.value))

IRs:
TMP_4(BulletinBoard.Message) = new Message(msg.sender,text,block.timestamp,msg.value)
REF_2 -> LENGTH messages
TMP_6(uint256) := REF_2(uint256)
TMP_7(uint256) = TMP_6 + 1
REF_2(uint256) (->messages) := TMP_7(uint256)
REF_3(BulletinBoard.Message) -> messages[TMP_6]
REF_3(BulletinBoard.Message) (->messages) := TMP_4(BulletinBoard.Message)"];
}
// Function: 6199.sol-BulletinBoard-constructor()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)"];
}
// Function: 6199.sol-BulletinBoard-numMessages()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: RETURN 1

EXPRESSION:
messages.length

IRs:
REF_4 -> LENGTH messages
RETURN REF_4"];
}
// Function: 6199.sol-BulletinBoard-withdraw()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(msg.sender == owner)

IRs:
TMP_8(bool) = msg.sender == owner
TMP_9(None) = SOLIDITY_CALL require(bool)(TMP_8)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
msg.sender.transfer(address(this).balance)

IRs:
TMP_10 = CONVERT this to address
TMP_11(uint256) = SOLIDITY_CALL balance(address)(TMP_10)
Transfer dest:msg.sender value:TMP_11"];
}
}
