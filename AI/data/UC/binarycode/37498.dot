digraph G {
// Function: 37498.sol-generic_holder-change_owner(address)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->2;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
owner = new_owner

IRs:
owner(address) := new_owner(address)"];
2[label="Node Type: EXPRESSION 2

EXPRESSION:
onlyowner()

IRs:
MODIFIER_CALL, generic_holder.onlyowner()()"];
2->1;
}
// Function: 37498.sol-generic_holder-execute(address,uint256,bytes)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->2;
1[label="Node Type: RETURN 1

EXPRESSION:
_to.call.value(_value)(_data)

IRs:
TMP_2(bool) = LOW_LEVEL_CALL, dest:_to, function:call, arguments:['_data'] value:_value 
RETURN TMP_2"];
2[label="Node Type: EXPRESSION 2

EXPRESSION:
onlyowner()

IRs:
MODIFIER_CALL, generic_holder.onlyowner()()"];
2->1;
}
// Function: 37498.sol-generic_holder-generic_holder()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)"];
}
// Function: 37498.sol-generic_holder-get_owner()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: RETURN 1

EXPRESSION:
owner

IRs:
RETURN owner"];
}
// Function: 37498.sol-generic_holder-onlyowner()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool)(msg.sender == owner)

IRs:
TMP_8(bool) = msg.sender == owner
TMP_9(None) = SOLIDITY_CALL require(bool)(TMP_8)"];
1->2;
2[label="Node Type: _ 2
"];
}
// Function: 37498.sol-generic_holder-send(address)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->2;
1[label="Node Type: RETURN 1

EXPRESSION:
_to.call.gas(300000).value(msg.value)()

IRs:
TMP_6(bool) = LOW_LEVEL_CALL, dest:_to, function:call, arguments:[] value:msg.value gas:300000
RETURN TMP_6"];
2[label="Node Type: EXPRESSION 2

EXPRESSION:
onlyowner()

IRs:
MODIFIER_CALL, generic_holder.onlyowner()()"];
2->1;
}
}
