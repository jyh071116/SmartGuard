digraph G {
// Function: 39931.sol-Builder-Owned()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)"];
}
// Function: 39931.sol-Builder-delegate(address)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->2;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
owner = _owner

IRs:
owner(address) := _owner(address)"];
2[label="Node Type: EXPRESSION 2

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()"];
2->1;
}
// Function: 39931.sol-Builder-getLastContract()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
sender_contracts = getContractsOf[msg.sender]

IRs:
REF_4(address[]) -> getContractsOf[msg.sender]
sender_contracts(address[1]) = ['REF_4(address[])']"];
1->2;
2[label="Node Type: RETURN 2

EXPRESSION:
sender_contracts[sender_contracts.length - 1]

IRs:
REF_5 -> LENGTH sender_contracts
TMP_28(uint256) = REF_5 - 1
REF_6(address) -> sender_contracts[TMP_28]
RETURN REF_6"];
}
// Function: 39931.sol-Builder-kill()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->2;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
suicide(address)(owner)

IRs:
TMP_25(None) = SOLIDITY_CALL suicide(address)(owner)"];
2[label="Node Type: EXPRESSION 2

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()"];
2->1;
}
// Function: 39931.sol-Builder-onlyOwner()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: IF 1

EXPRESSION:
msg.sender != owner

IRs:
TMP_32(bool) = msg.sender != owner
CONDITION TMP_32"];
1->2[label="True"];
1->3[label="False"];
2[label="Node Type: THROW 2
"];
3[label="Node Type: END_IF 3
"];
3->4;
4[label="Node Type: _ 4
"];
}
// Function: 39931.sol-Builder-setBeneficiary(address)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->2;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
beneficiary = _beneficiary

IRs:
beneficiary(address) := _beneficiary(address)"];
2[label="Node Type: EXPRESSION 2

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()"];
2->1;
}
// Function: 39931.sol-Builder-setCost(uint256)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->2;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
buildingCostWei = _buildingCostWei

IRs:
buildingCostWei(uint256) := _buildingCostWei(uint256)"];
2[label="Node Type: EXPRESSION 2

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()"];
2->1;
}
// Function: 39931.sol-Builder-setSecurityCheck(string)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->2;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
securityCheckURI = _uri

IRs:
securityCheckURI(string) := _uri(string)"];
2[label="Node Type: EXPRESSION 2

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()"];
2->1;
}
// Function: 39931.sol-BuilderComission-Owned()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)"];
}
// Function: 39931.sol-BuilderComission-create(address,bytes32,uint256,address)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: IF 1

EXPRESSION:
buildingCostWei > 0 && beneficiary != 0

IRs:
TMP_40(bool) = buildingCostWei > 0
TMP_41(bool) = beneficiary != 0
TMP_42(bool) = TMP_40 && TMP_41
CONDITION TMP_42"];
1->2[label="True"];
1->13[label="False"];
2[label="Node Type: IF 2

EXPRESSION:
msg.value < buildingCostWei

IRs:
TMP_43(bool) = msg.value < buildingCostWei
CONDITION TMP_43"];
2->3[label="True"];
2->4[label="False"];
3[label="Node Type: THROW 3
"];
4[label="Node Type: END_IF 4
"];
4->5;
5[label="Node Type: IF 5

EXPRESSION:
! beneficiary.send(buildingCostWei)

IRs:
TMP_44 = SEND dest:beneficiary value:buildingCostWei
TMP_45 = UnaryType.BANG TMP_44 
CONDITION TMP_45"];
5->6[label="True"];
5->7[label="False"];
6[label="Node Type: THROW 6
"];
7[label="Node Type: END_IF 7
"];
7->8;
8[label="Node Type: IF 8

EXPRESSION:
msg.value > buildingCostWei

IRs:
TMP_46(bool) = msg.value > buildingCostWei
CONDITION TMP_46"];
8->9[label="True"];
8->12[label="False"];
9[label="Node Type: IF 9

EXPRESSION:
! msg.sender.send(msg.value - buildingCostWei)

IRs:
TMP_47(uint256) = msg.value - buildingCostWei
TMP_48 = SEND dest:msg.sender value:TMP_47
TMP_49 = UnaryType.BANG TMP_48 
CONDITION TMP_49"];
9->10[label="True"];
9->11[label="False"];
10[label="Node Type: THROW 10
"];
11[label="Node Type: END_IF 11
"];
11->12;
12[label="Node Type: END_IF 12
"];
12->18;
13[label="Node Type: IF 13

EXPRESSION:
msg.value > 0

IRs:
TMP_50(bool) = msg.value > 0
CONDITION TMP_50"];
13->14[label="True"];
13->17[label="False"];
14[label="Node Type: IF 14

EXPRESSION:
! msg.sender.send(msg.value)

IRs:
TMP_51 = SEND dest:msg.sender value:msg.value
TMP_52 = UnaryType.BANG TMP_51 
CONDITION TMP_52"];
14->15[label="True"];
14->16[label="False"];
15[label="Node Type: THROW 15
"];
16[label="Node Type: END_IF 16
"];
16->17;
17[label="Node Type: END_IF 17
"];
17->18;
18[label="Node Type: END_IF 18
"];
18->19;
19[label="Node Type: IF 19

EXPRESSION:
_client == 0

IRs:
TMP_53(bool) = _client == 0
CONDITION TMP_53"];
19->20[label="True"];
19->21[label="False"];
20[label="Node Type: EXPRESSION 20

EXPRESSION:
_client = msg.sender

IRs:
_client(address) := msg.sender(address)"];
20->21;
21[label="Node Type: END_IF 21
"];
21->22;
22[label="Node Type: NEW VARIABLE 22

EXPRESSION:
inst = CreatorComission.create(_ledger,_taxman,_taxPerc)

IRs:
TMP_54(Comission) = LIBRARY_CALL, dest:CreatorComission, function:CreatorComission.create(address,bytes32,uint256), arguments:['_ledger', '_taxman', '_taxPerc'] 
inst(Comission) := TMP_54(Comission)"];
22->23;
23[label="Node Type: EXPRESSION 23

EXPRESSION:
inst.delegate(_client)

IRs:
HIGH_LEVEL_CALL, dest:inst(Comission), function:delegate, arguments:['_client']  "];
23->24;
24[label="Node Type: EXPRESSION 24

EXPRESSION:
Builded(_client,inst)

IRs:
Emit Builded(_client,inst)"];
24->25;
25[label="Node Type: EXPRESSION 25

EXPRESSION:
getContractsOf[_client].push(inst)

IRs:
REF_15(address[]) -> getContractsOf[_client]
REF_17 -> LENGTH REF_15
TMP_58(uint256) := REF_17(uint256)
TMP_59(uint256) = TMP_58 + 1
REF_17(uint256) (->getContractsOf) := TMP_59(uint256)
REF_18(address) -> REF_15[TMP_58]
REF_18(address) (->getContractsOf) := inst(Comission)"];
25->26;
26[label="Node Type: RETURN 26

EXPRESSION:
inst

IRs:
RETURN inst"];
}
// Function: 39931.sol-BuilderComission-delegate(address)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->2;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
owner = _owner

IRs:
owner(address) := _owner(address)"];
2[label="Node Type: EXPRESSION 2

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()"];
2->1;
}
// Function: 39931.sol-BuilderComission-getLastContract()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
sender_contracts = getContractsOf[msg.sender]

IRs:
REF_7(address[]) -> getContractsOf[msg.sender]
sender_contracts(address[1]) = ['REF_7(address[])']"];
1->2;
2[label="Node Type: RETURN 2

EXPRESSION:
sender_contracts[sender_contracts.length - 1]

IRs:
REF_8 -> LENGTH sender_contracts
TMP_33(uint256) = REF_8 - 1
REF_9(address) -> sender_contracts[TMP_33]
RETURN REF_9"];
}
// Function: 39931.sol-BuilderComission-kill()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->2;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
suicide(address)(owner)

IRs:
TMP_37(None) = SOLIDITY_CALL suicide(address)(owner)"];
2[label="Node Type: EXPRESSION 2

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()"];
2->1;
}
// Function: 39931.sol-BuilderComission-onlyOwner()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: IF 1

EXPRESSION:
msg.sender != owner

IRs:
TMP_60(bool) = msg.sender != owner
CONDITION TMP_60"];
1->2[label="True"];
1->3[label="False"];
2[label="Node Type: THROW 2
"];
3[label="Node Type: END_IF 3
"];
3->4;
4[label="Node Type: _ 4
"];
}
// Function: 39931.sol-BuilderComission-setBeneficiary(address)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->2;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
beneficiary = _beneficiary

IRs:
beneficiary(address) := _beneficiary(address)"];
2[label="Node Type: EXPRESSION 2

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()"];
2->1;
}
// Function: 39931.sol-BuilderComission-setCost(uint256)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->2;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
buildingCostWei = _buildingCostWei

IRs:
buildingCostWei(uint256) := _buildingCostWei(uint256)"];
2[label="Node Type: EXPRESSION 2

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()"];
2->1;
}
// Function: 39931.sol-BuilderComission-setSecurityCheck(string)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->2;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
securityCheckURI = _uri

IRs:
securityCheckURI(string) := _uri(string)"];
2[label="Node Type: EXPRESSION 2

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()"];
2->1;
}
// Function: 39931.sol-Comission-Comission(address,bytes32,uint256)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
ledger = _ledger

IRs:
ledger(address) := _ledger(address)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
taxman = _taxman

IRs:
taxman(bytes32) := _taxman(bytes32)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
taxPerc = _taxPerc

IRs:
taxPerc(uint256) := _taxPerc(uint256)"];
}
// Function: 39931.sol-Comission-Owned()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)"];
}
// Function: 39931.sol-Comission-delegate(address)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->2;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
owner = _owner

IRs:
owner(address) := _owner(address)"];
2[label="Node Type: EXPRESSION 2

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()"];
2->1;
}
// Function: 39931.sol-Comission-kill()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->2;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
suicide(address)(owner)

IRs:
TMP_6(None) = SOLIDITY_CALL suicide(address)(owner)"];
2[label="Node Type: EXPRESSION 2

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()"];
2->1;
}
// Function: 39931.sol-Comission-onlyOwner()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: IF 1

EXPRESSION:
msg.sender != owner

IRs:
TMP_22(bool) = msg.sender != owner
CONDITION TMP_22"];
1->2[label="True"];
1->3[label="False"];
2[label="Node Type: THROW 2
"];
3[label="Node Type: END_IF 3
"];
3->4;
4[label="Node Type: _ 4
"];
}
// Function: 39931.sol-Comission-process(bytes32)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: IF 1

EXPRESSION:
msg.value < 100

IRs:
TMP_9(bool) = msg.value < 100
CONDITION TMP_9"];
1->2[label="True"];
1->3[label="False"];
2[label="Node Type: THROW 2
"];
3[label="Node Type: END_IF 3
"];
3->4;
4[label="Node Type: NEW VARIABLE 4

EXPRESSION:
tax = msg.value * taxPerc / 100

IRs:
TMP_10(uint256) = msg.value * taxPerc
TMP_11(uint256) = TMP_10 / 100
tax(uint256) := TMP_11(uint256)"];
4->5;
5[label="Node Type: NEW VARIABLE 5

EXPRESSION:
refill = bytes4(sha3()(refill(bytes32)))

IRs:
TMP_12(bytes32) = SOLIDITY_CALL sha3()(refill(bytes32))
TMP_13 = CONVERT TMP_12 to bytes4
refill(bytes4) := TMP_13(bytes4)"];
5->6;
6[label="Node Type: IF 6

EXPRESSION:
! ledger.call.value(tax)(refill,taxman) || ! ledger.call.value(msg.value - tax)(refill,_destination)

IRs:
TMP_15(bool) = LOW_LEVEL_CALL, dest:ledger, function:call, arguments:['refill', 'taxman'] value:tax 
TMP_16 = UnaryType.BANG TMP_15 
TMP_17(uint256) = msg.value - tax
TMP_19(bool) = LOW_LEVEL_CALL, dest:ledger, function:call, arguments:['refill', '_destination'] value:TMP_17 
TMP_20 = UnaryType.BANG TMP_19 
TMP_21(bool) = TMP_16 || TMP_20
CONDITION TMP_21"];
6->7[label="True"];
6->8[label="False"];
7[label="Node Type: THROW 7
"];
8[label="Node Type: END_IF 8
"];
8->9;
9[label="Node Type: RETURN 9

EXPRESSION:
true

IRs:
RETURN True"];
}
// Function: 39931.sol-CreatorComission-abi()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: RETURN 1

EXPRESSION:
[{"constant":false,"inputs":[{"name":"_destination","type":"bytes32"}],"name":"process","outputs":[{"name":"","type":"bool"}],"payable":true,"type":"function"},{"constant":false,"inputs":[],"name":"kill","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"taxman","outputs":[{"name":"","type":"bytes32"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"ledger","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"delegate","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"taxPerc","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"inputs":[{"name":"_ledger","type":"address"},{"name":"_taxman","type":"bytes32"},{"name":"_taxPerc","type":"uint256"}],"type":"constructor"}]

IRs:
RETURN [{"constant":false,"inputs":[{"name":"_destination","type":"bytes32"}],"name":"process","outputs":[{"name":"","type":"bool"}],"payable":true,"type":"function"},{"constant":false,"inputs":[],"name":"kill","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"taxman","outputs":[{"name":"","type":"bytes32"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"ledger","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"delegate","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"taxPerc","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"inputs":[{"name":"_ledger","type":"address"},{"name":"_taxman","type":"bytes32"},{"name":"_taxPerc","type":"uint256"}],"type":"constructor"}]"];
}
// Function: 39931.sol-CreatorComission-create(address,bytes32,uint256)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: RETURN 1

EXPRESSION:
new Comission(_ledger,_taxman,_taxPerc)

IRs:
TMP_24(Comission) = new Comission(_ledger,_taxman,_taxPerc) 
RETURN TMP_24"];
}
// Function: 39931.sol-CreatorComission-version()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: RETURN 1

EXPRESSION:
v0.5.0 (a9ea4c6c)

IRs:
RETURN v0.5.0 (a9ea4c6c)"];
}
// Function: 39931.sol-Mortal-Owned()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)"];
}
// Function: 39931.sol-Mortal-delegate(address)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->2;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
owner = _owner

IRs:
owner(address) := _owner(address)"];
2[label="Node Type: EXPRESSION 2

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()"];
2->1;
}
// Function: 39931.sol-Mortal-kill()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->2;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
suicide(address)(owner)

IRs:
TMP_3(None) = SOLIDITY_CALL suicide(address)(owner)"];
2[label="Node Type: EXPRESSION 2

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()"];
2->1;
}
// Function: 39931.sol-Mortal-onlyOwner()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: IF 1

EXPRESSION:
msg.sender != owner

IRs:
TMP_5(bool) = msg.sender != owner
CONDITION TMP_5"];
1->2[label="True"];
1->3[label="False"];
2[label="Node Type: THROW 2
"];
3[label="Node Type: END_IF 3
"];
3->4;
4[label="Node Type: _ 4
"];
}
// Function: 39931.sol-Owned-Owned()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
owner = msg.sender

IRs:
owner(address) := msg.sender(address)"];
}
// Function: 39931.sol-Owned-delegate(address)
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->2;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
owner = _owner

IRs:
owner(address) := _owner(address)"];
2[label="Node Type: EXPRESSION 2

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Owned.onlyOwner()()"];
2->1;
}
// Function: 39931.sol-Owned-onlyOwner()
digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: IF 1

EXPRESSION:
msg.sender != owner

IRs:
TMP_1(bool) = msg.sender != owner
CONDITION TMP_1"];
1->2[label="True"];
1->3[label="False"];
2[label="Node Type: THROW 2
"];
3[label="Node Type: END_IF 3
"];
3->4;
4[label="Node Type: _ 4
"];
}
}
